openapi: 3.0.0
info:
  title: Binance USDs-M Futures API
  description: |-
    Binance official supported Postman collections.<br/>
    - API documents: https://binance-docs.github.io/apidocs/futures/en/
    - Telegram: https://t.me/binance_api_english
    - Open Issue at: https://github.com/binance-exchange/binance-api-postman
  version: 1.0.0
servers:
  - url: https://fapi.binance.com
    description: Binance USDS-M Futures API
  - url: https://testnet.binancefuture.com
    description: Binance Futures Testnet
tags:
  - name: Market
  - name: Account
  - name: Order
  - name: Trade
  - name: Data Stream
  - name: Portfolio Margin
paths:
  /fapi/v1/ping:
    get:
      tags:
        - Market
      summary: Test Connectivity
      description: Test connectivity to the Rest API.
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /fapi/v1/time:
    get:
      tags:
        - Market
      summary: Check Server Time
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /fapi/v1/exchangeInfo:
    get:
      tags:
        - Market
      summary: Exchange Information
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /fapi/v1/depth:
    get:
      tags:
        - Market
      summary: Order Book
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: symbol
          in: query
          schema:
            type: string
          example: BTCUSDT
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /fapi/v1/trades:
    get:
      tags:
        - Market
      summary: Recent Trades List
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: symbol
          in: query
          schema:
            type: string
          example: BTCUSDT
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /fapi/v1/historicalTrades:
    get:
      tags:
        - Market
      summary: Old Trades Lookup (MARKET_DATA)
      description: This endpoint need your API key only, not the secret key.
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: X-MBX-APIKEY
          in: header
          schema:
            type: string
          example: binance-api-key
        - name: symbol
          in: query
          schema:
            type: string
          example: BTCUSDT
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /fapi/v1/aggTrades:
    get:
      tags:
        - Market
      summary: Compressed/Aggregate Trades List
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: symbol
          in: query
          schema:
            type: string
          example: BTCUSDT
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /fapi/v1/klines:
    get:
      tags:
        - Market
      summary: Kline/Candlestick Data
      description: >-
        Kline/candlestick bars for a symbol. Klines are uniquely identified by
        their open time.
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: symbol
          in: query
          schema:
            type: string
          example: BTCUSDT
        - name: interval
          in: query
          schema:
            type: string
          description: 1m, 1h, 1d
          example: 1h
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /fapi/v1/continuousKlines:
    get:
      tags:
        - Market
      summary: Continuous Contract Kline/Candlestick Data
      description: >-
        Kline/candlestick bars for a symbol. Klines are uniquely identified by
        their open time.
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: pair
          in: query
          schema:
            type: string
        - name: contractType
          in: query
          schema:
            type: string
        - name: interval
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /fapi/v1/indexPriceKlines:
    get:
      tags:
        - Market
      summary: Index Price Kline/Candlestick Data
      description: >-
        Kline/candlestick bars for the index price of a pair. Klines are
        uniquely identified by their open time.
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: pair
          in: query
          schema:
            type: string
          example: BTCUSDT
        - name: interval
          in: query
          schema:
            type: string
          description: 1m, 1h, 1d
          example: 1h
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /fapi/v1/markPriceKlines:
    get:
      tags:
        - Market
      summary: Mark Price Kline/Candlestick Data
      description: >-
        Kline/candlestick bars for the mark price of a symbol. Klines are
        uniquely identified by their open time.
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: symbol
          in: query
          schema:
            type: string
          example: BTCUSDT
        - name: interval
          in: query
          schema:
            type: string
          description: 1m, 1h, 1d
          example: 1h
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /fapi/v1/premiumIndex:
    get:
      tags:
        - Market
      summary: Mark Price
      description: |-
        Mark Price and Funding Rate

        Weight: 1
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /fapi/v1/fundingRate:
    get:
      tags:
        - Market
      summary: Get Funding Rate History
      description: |-
        Mark Price and Funding Rate

        Weight: 1
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /fapi/v1/ticker/24hr:
    get:
      tags:
        - Market
      summary: 24hr Ticker Price Change Statistics
      description: |-
        24 hour rolling window price change statistics.

        Careful when accessing this with no symbol.

        Weight:

        1 for a single symbol;

        40 when the symbol parameter is omitted
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /fapi/v2/ticker/price:
    get:
      tags:
        - Market
      summary: Symbol Price Ticker V2
      description: Latest price for a symbol or symbols.
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /fapi/v1/ticker/bookTicker:
    get:
      tags:
        - Market
      summary: Symbol Order Book Ticker
      description: Best price/qty on the order book for a symbol or symbols.
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /fapi/v1/openInterest:
    get:
      tags:
        - Market
      summary: Open Interest
      description: Get present open interest of a specific symbol.
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: symbol
          in: query
          schema:
            type: string
          example: BTCUSDT
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /futures/data/openInterestHist:
    get:
      tags:
        - Market
      summary: Open Interest Statistics
      description: Get present open interest of a specific symbol.
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: X-MBX-APIKEY
          in: header
          schema:
            type: string
          example: binance-api-key
        - name: symbol
          in: query
          schema:
            type: string
          example: BTCUSDT
        - name: period
          in: query
          schema:
            type: string
          description: '"5m","15m","30m","1h","2h","4h","6h","12h","1d"'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /futures/data/topLongShortAccountRatio:
    get:
      tags:
        - Market
      summary: Top Trader Long/Short Ratio (Accounts)
      description: Get present open interest of a specific symbol.
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: symbol
          in: query
          schema:
            type: string
          example: BTCUSDT
        - name: period
          in: query
          schema:
            type: string
          description: '"5m","15m","30m","1h","2h","4h","6h","12h","1d"'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /futures/data/topLongShortPositionRatio:
    get:
      tags:
        - Market
      summary: Top Trader Long/Short Ratio (Positions)
      description: Get present open interest of a specific symbol.
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: symbol
          in: query
          schema:
            type: string
          example: BTCUSDT
        - name: period
          in: query
          schema:
            type: string
          description: '"5m","15m","30m","1h","2h","4h","6h","12h","1d"'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /futures/data/globalLongShortAccountRatio:
    get:
      tags:
        - Market
      summary: Long/Short Ratio
      description: Get present open interest of a specific symbol.
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: X-MBX-APIKEY
          in: header
          schema:
            type: string
          example: binance-api-key
        - name: symbol
          in: query
          schema:
            type: string
          example: BTCUSDT
        - name: period
          in: query
          schema:
            type: string
          description: '"5m","15m","30m","1h","2h","4h","6h","12h","1d"'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /futures/data/takerlongshortRatio:
    get:
      tags:
        - Market
      summary: Taker Buy/Sell Volume
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: X-MBX-APIKEY
          in: header
          schema:
            type: string
          example: binance-api-key
        - name: symbol
          in: query
          schema:
            type: string
          example: BTCUSDT
        - name: period
          in: query
          schema:
            type: string
          description: '"5m","15m","30m","1h","2h","4h","6h","12h","1d"'
          example: 5m
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /fapi/v1/lvtKlines:
    get:
      tags:
        - Market
      summary: Historical BLVT NAV Kline/Candlestick
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: X-MBX-APIKEY
          in: header
          schema:
            type: string
          example: binance-api-key
        - name: symbol
          in: query
          schema:
            type: string
          description: token name
        - name: interval
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /fapi/v1/indexInfo:
    get:
      tags:
        - Market
      summary: Composite Index Symbol Information
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: X-MBX-APIKEY
          in: header
          schema:
            type: string
          example: binance-api-key
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /fapi/v1/assetIndex:
    get:
      tags:
        - Market
      summary: Get Funding Rate Info
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /fapi/v1/constituents:
    get:
      tags:
        - Market
      summary: Quarterly Contract Settlement Price
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: pair
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /futures/data/basis:
    get:
      tags:
        - Market
      summary: Basis
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: pair
          in: query
          schema:
            type: string
        - name: contractType
          in: query
          schema:
            type: string
        - name: period
          in: query
          schema:
            type: string
        - name: limit
          in: query
          schema:
            type: string
        - name: startTime
          in: query
          schema:
            type: string
        - name: endTime
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /fapi/v2/account:
    get:
      tags:
        - Account
      summary: Account information
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: X-MBX-APIKEY
          in: header
          schema:
            type: string
          example: binance-api-key
        - name: recvWindow
          in: query
          schema:
            type: integer
          example: '5000'
        - name: timestamp
          in: query
          schema:
            type: integer
          example: '1234567890'
        - name: signature
          in: query
          schema:
            type: string
          example: signature
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /fapi/v1/income:
    get:
      tags:
        - Account
      summary: Get Income History
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: X-MBX-APIKEY
          in: header
          schema:
            type: string
          example: binance-api-key
        - name: timestamp
          in: query
          schema:
            type: integer
          example: '1234567890'
        - name: signature
          in: query
          schema:
            type: string
          example: signature
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /fapi/v2/positionRisk:
    get:
      tags:
        - Account
      summary: Position Information
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: X-MBX-APIKEY
          in: header
          schema:
            type: string
          example: binance-api-key
        - name: timestamp
          in: query
          schema:
            type: integer
          example: '1234567890'
        - name: signature
          in: query
          schema:
            type: string
          example: signature
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /fapi/v1/userTrades:
    get:
      tags:
        - Account
      summary: Account Trade List
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: X-MBX-APIKEY
          in: header
          schema:
            type: string
          example: binance-api-key
        - name: symbol
          in: query
          schema:
            type: string
          example: BTCUSDT
        - name: timestamp
          in: query
          schema:
            type: integer
          example: '1234567890'
        - name: signature
          in: query
          schema:
            type: string
          example: signature
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /fapi/v2/balance:
    get:
      tags:
        - Account
      summary: Future Account Balance
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: X-MBX-APIKEY
          in: header
          schema:
            type: string
          example: binance-api-key
        - name: timestamp
          in: query
          schema:
            type: integer
          example: '1234567890'
        - name: signature
          in: query
          schema:
            type: string
          example: signature
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /fapi/v1/leverageBracket:
    get:
      tags:
        - Account
      summary: Notional and Leverage Brackets (USER_DATA)
      description: Get present open interest of a specific symbol.
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: X-MBX-APIKEY
          in: header
          schema:
            type: string
          example: binance-api-key
        - name: timestamp
          in: query
          schema:
            type: integer
          example: '1234567890'
        - name: signature
          in: query
          schema:
            type: string
          example: signature
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /fapi/v1/adlQuantile:
    get:
      tags:
        - Account
      summary: Position ADL Quantile Estimation (USER_DATA)
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: X-MBX-APIKEY
          in: header
          schema:
            type: string
          example: binance-api-key
        - name: timestamp
          in: query
          schema:
            type: integer
          example: '1234567890'
        - name: signature
          in: query
          schema:
            type: string
          example: signature
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /fapi/v1/commissionRate:
    get:
      tags:
        - Account
      summary: User Commission Rate (USER_DATA)
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: X-MBX-APIKEY
          in: header
          schema:
            type: string
          example: binance-api-key
        - name: symbol
          in: query
          schema:
            type: string
        - name: timestamp
          in: query
          schema:
            type: integer
          example: '1234567890'
        - name: signature
          in: query
          schema:
            type: string
          example: signature
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /fapi/v1/multiAssetsMargin:
    get:
      tags:
        - Trade
      summary: Get Current Multi-Assets Mode (USER_DATA)
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: X-MBX-APIKEY
          in: header
          schema:
            type: string
          example: binance-api-key
        - name: timestamp
          in: query
          schema:
            type: integer
          example: '1234567890'
        - name: signature
          in: query
          schema:
            type: string
          example: signature
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    post:
      tags:
        - Trade
      summary: Change Multi-Assets Mode (TRADE)
      requestBody:
        content: {}
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: X-MBX-APIKEY
          in: header
          schema:
            type: string
          example: binance-api-key
        - name: multiAssetsMargin
          in: query
          schema:
            type: boolean
          description: '"true": Multi-Assets Mode; "false": Single-Asset Mode'
          example: 'true'
        - name: timestamp
          in: query
          schema:
            type: integer
          example: '1234567890'
        - name: signature
          in: query
          schema:
            type: string
          example: signature
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /fapi/v1/order:
    post:
      tags:
        - Order
      summary: New Order (TRADE)
      description: https://binance-docs.github.io/apidocs/futures/en/#new-order-trade
      requestBody:
        content: {}
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: X-MBX-APIKEY
          in: header
          schema:
            type: string
          example: binance-api-key
        - name: symbol
          in: query
          schema:
            type: string
        - name: side
          in: query
          schema:
            type: string
        - name: type
          in: query
          schema:
            type: string
        - name: quantity
          in: query
          schema:
            type: string
        - name: price
          in: query
          schema:
            type: string
        - name: timestamp
          in: query
          schema:
            type: integer
          example: '1234567890'
        - name: signature
          in: query
          schema:
            type: string
          example: signature
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    put:
      tags:
        - Order
      summary: Modify Order (TRADE)
      description: >-
        Either orderId or origClientOrderId must be sent, and the orderId will
        prevail if both are sent.

        Both quantity and price must be sent, which is different from dapi
        modify order endpoint.

        When the new quantity or price doesn't satisfy PRICE_FILTER /
        PERCENT_FILTER / LOT_SIZE, amendment will be rejected and the order will
        stay as it is.

        However the order will be cancelled by the amendment in the following
        situations:

        - when the order is in partially filled status and the new quantity <=
        executedQty

        - When the order is GTX and the new price will cause it to be executed
        immediately

        One order can only be modfied for less than 10000 times


        Weight: 1
      requestBody:
        content: {}
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: X-MBX-APIKEY
          in: header
          schema:
            type: string
          example: binance-api-key
        - name: symbol
          in: query
          schema:
            type: string
        - name: side
          in: query
          schema:
            type: string
        - name: quantity
          in: query
          schema:
            type: string
        - name: price
          in: query
          schema:
            type: string
        - name: timestamp
          in: query
          schema:
            type: integer
          example: '1234567890'
        - name: signature
          in: query
          schema:
            type: string
          example: signature
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - Order
      summary: Query Order
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: X-MBX-APIKEY
          in: header
          schema:
            type: string
          example: binance-api-key
        - name: symbol
          in: query
          schema:
            type: string
          example: BTCUSDT
        - name: timestamp
          in: query
          schema:
            type: integer
          example: '1234567890'
        - name: signature
          in: query
          schema:
            type: string
          example: signature
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    delete:
      tags:
        - Order
      summary: Cancel Order
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: X-MBX-APIKEY
          in: header
          schema:
            type: string
          example: binance-api-key
        - name: symbol
          in: query
          schema:
            type: string
          example: BTCUSDT
        - name: timestamp
          in: query
          schema:
            type: integer
          example: '1234567890'
        - name: signature
          in: query
          schema:
            type: string
          example: signature
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /fapi/v1/batchOrders:
    post:
      tags:
        - Order
      summary: Place Multiple Orders (TRADE)
      requestBody:
        content: {}
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: X-MBX-APIKEY
          in: header
          schema:
            type: string
          example: binance-api-key
        - name: batchOrders
          in: query
          schema:
            type: string
        - name: timestamp
          in: query
          schema:
            type: integer
          example: '1234567890'
        - name: signature
          in: query
          schema:
            type: string
          description: |-
            Default BOTH for One-way Mode ;
            LONG or SHORT for Hedge Mode. It must be sent with Hedge Mode.
          example: signature
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    put:
      tags:
        - Order
      summary: Modify Multiple Orders (TRADE)
      requestBody:
        content: {}
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: X-MBX-APIKEY
          in: header
          schema:
            type: string
          example: binance-api-key
        - name: batchOrders
          in: query
          schema:
            type: string
          description: order list. Max 5 orders
        - name: timestamp
          in: query
          schema:
            type: integer
          example: '1234567890'
        - name: signature
          in: query
          schema:
            type: string
          description: |-
            Default BOTH for One-way Mode ;
            LONG or SHORT for Hedge Mode. It must be sent with Hedge Mode.
          example: signature
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    delete:
      tags:
        - Order
      summary: Cancel Multiple Orders (TRADE)
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: X-MBX-APIKEY
          in: header
          schema:
            type: string
          example: binance-api-key
        - name: symbol
          in: query
          schema:
            type: string
          example: BTCUSDT
        - name: origClientOrderIdList
          in: query
          schema:
            type: string
          example: '[IKDQAMirf7vElig8hTZHh0,HwJSQKA7drF37tqqAN6q6q]'
        - name: timestamp
          in: query
          schema:
            type: integer
          example: '1234567890'
        - name: signature
          in: query
          schema:
            type: string
          example: signature
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /fapi/v1/orderAmendment:
    get:
      tags:
        - Order
      summary: Get Order Modify History (USER_DATA)
      description: >-
        Get order modification history

        Either orderId or origClientOrderId must be sent, and the orderId will
        prevail if both are sent.


        Weight: 1
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: X-MBX-APIKEY
          in: header
          schema:
            type: string
          example: binance-api-key
        - name: symbol
          in: query
          schema:
            type: string
        - name: timestamp
          in: query
          schema:
            type: integer
          example: '1234567890'
        - name: signature
          in: query
          schema:
            type: string
          description: |-
            Default BOTH for One-way Mode ;
            LONG or SHORT for Hedge Mode. It must be sent with Hedge Mode.
          example: signature
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /fapi/v1/order/asyn:
    get:
      tags:
        - Order
      summary: Get Download Id For Futures Order History (USER_DATA)
      description: >-
        Request Limitation is 10 times per month, shared by front end download
        page and rest api

        The time between startTime and endTime can not be longer than 1 year

        Weight: 5
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: X-MBX-APIKEY
          in: header
          schema:
            type: string
          example: binance-api-key
        - name: startTime
          in: query
          schema:
            type: string
          description: Timestamp in ms
        - name: endTime
          in: query
          schema:
            type: string
          description: Timestamp in ms
        - name: timestamp
          in: query
          schema:
            type: integer
          example: '1234567890'
        - name: signature
          in: query
          schema:
            type: string
          description: |-
            Default BOTH for One-way Mode ;
            LONG or SHORT for Hedge Mode. It must be sent with Hedge Mode.
          example: signature
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /fapi/v1/order/asyn/id:
    get:
      tags:
        - Order
      summary: Get Futures Order History Download Link by Id (USER_DATA)
      description: |-
        Download link expiration: 24h
        Weight: 5
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: X-MBX-APIKEY
          in: header
          schema:
            type: string
          example: binance-api-key
        - name: downloadId
          in: query
          schema:
            type: string
          description: get by download id api
        - name: timestamp
          in: query
          schema:
            type: integer
          example: '1234567890'
        - name: signature
          in: query
          schema:
            type: string
          description: |-
            Default BOTH for One-way Mode ;
            LONG or SHORT for Hedge Mode. It must be sent with Hedge Mode.
          example: signature
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /fapi/v1/trade/asyn:
    get:
      tags:
        - Order
      summary: Get Download Id For Futures Trade History (USER_DATA)
      description: >-
        Request Limitation is 5 times per month, shared by front end download
        page and rest api

        The time between startTime and endTime can not be longer than 1 year

        Weight: 5
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: X-MBX-APIKEY
          in: header
          schema:
            type: string
          example: binance-api-key
        - name: startTime
          in: query
          schema:
            type: string
          description: Timestamp in ms
        - name: endTime
          in: query
          schema:
            type: string
          description: Timestamp in ms
        - name: timestamp
          in: query
          schema:
            type: integer
          example: '1234567890'
        - name: signature
          in: query
          schema:
            type: string
          description: |-
            Default BOTH for One-way Mode ;
            LONG or SHORT for Hedge Mode. It must be sent with Hedge Mode.
          example: signature
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /fapi/v1/trade/asyn/id:
    get:
      tags:
        - Order
      summary: Get Futures Trade Download Link by Id (USER_DATA)
      description: |-
        Download link expiration: 24h
        Weight: 5
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: X-MBX-APIKEY
          in: header
          schema:
            type: string
          example: binance-api-key
        - name: downloadId
          in: query
          schema:
            type: string
          description: Timestamp in ms
        - name: timestamp
          in: query
          schema:
            type: integer
          example: '1234567890'
        - name: signature
          in: query
          schema:
            type: string
          description: |-
            Default BOTH for One-way Mode ;
            LONG or SHORT for Hedge Mode. It must be sent with Hedge Mode.
          example: signature
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /fapi/v1/allOpenOrders:
    delete:
      tags:
        - Order
      summary: Cancel All Open Orders
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: X-MBX-APIKEY
          in: header
          schema:
            type: string
          example: binance-api-key
        - name: symbol
          in: query
          schema:
            type: string
          example: BTCUSDT
        - name: timestamp
          in: query
          schema:
            type: integer
          example: '1234567890'
        - name: signature
          in: query
          schema:
            type: string
          example: signature
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /fapi/v1/countdownCancelAll:
    post:
      tags:
        - Order
      summary: Auto-Cancel All Open Orders (TRADE)
      requestBody:
        content: {}
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: X-MBX-APIKEY
          in: header
          schema:
            type: string
          example: binance-api-key
        - name: symbol
          in: query
          schema:
            type: string
        - name: countdownTime
          in: query
          schema:
            type: string
          description: countdown time, 1000 for 1 second. 0 to cancel the timer
        - name: timestamp
          in: query
          schema:
            type: integer
          example: '1234567890'
        - name: signature
          in: query
          schema:
            type: string
          example: signature
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /fapi/v1/openOrders:
    get:
      tags:
        - Order
      summary: Current All Open Orders (USER_DATA)
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: X-MBX-APIKEY
          in: header
          schema:
            type: string
          example: binance-api-key
        - name: timestamp
          in: query
          schema:
            type: integer
          example: '1234567890'
        - name: signature
          in: query
          schema:
            type: string
          example: signature
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /fapi/v1/openOrder:
    get:
      tags:
        - Order
      summary: Query Current Open Order (USER_DATA)
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: X-MBX-APIKEY
          in: header
          schema:
            type: string
          example: binance-api-key
        - name: symbol
          in: query
          schema:
            type: string
        - name: timestamp
          in: query
          schema:
            type: integer
          example: '1234567890'
        - name: signature
          in: query
          schema:
            type: string
          example: signature
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /fapi/v1/allOrders:
    get:
      tags:
        - Order
      summary: All Orders
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: X-MBX-APIKEY
          in: header
          schema:
            type: string
          example: binance-api-key
        - name: symbol
          in: query
          schema:
            type: string
        - name: timestamp
          in: query
          schema:
            type: integer
          example: '1234567890'
        - name: signature
          in: query
          schema:
            type: string
          example: signature
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /fapi/v1/forceOrders:
    get:
      tags:
        - Order
      summary: User's Force Orders (USER_DATA)
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: X-MBX-APIKEY
          in: header
          schema:
            type: string
          example: binance-api-key
        - name: timestamp
          in: query
          schema:
            type: integer
          example: '1234567890'
        - name: signature
          in: query
          schema:
            type: string
          example: signature
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /fapi/v1/marginType:
    post:
      tags:
        - Trade
      summary: Change Margin Type
      requestBody:
        content: {}
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: X-MBX-APIKEY
          in: header
          schema:
            type: string
          example: binance-api-key
        - name: symbol
          in: query
          schema:
            type: string
          example: BTCUSDT
        - name: marginType
          in: query
          schema:
            type: string
          example: ISOLATED
        - name: timestamp
          in: query
          schema:
            type: integer
          example: '1234567890'
        - name: signature
          in: query
          schema:
            type: string
          example: signature
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /fapi/v1/leverage:
    post:
      tags:
        - Trade
      summary: Change Initial Leverage
      requestBody:
        content: {}
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: X-MBX-APIKEY
          in: header
          schema:
            type: string
          example: binance-api-key
        - name: symbol
          in: query
          schema:
            type: string
          example: BTCUSDT
        - name: leverage
          in: query
          schema:
            type: integer
          example: '20'
        - name: timestamp
          in: query
          schema:
            type: integer
          example: '1234567890'
        - name: signature
          in: query
          schema:
            type: string
          example: signature
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /fapi/v1/positionMargin:
    post:
      tags:
        - Trade
      summary: Modify Isolated Position Margin
      requestBody:
        content: {}
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: X-MBX-APIKEY
          in: header
          schema:
            type: string
          example: binance-api-key
        - name: symbol
          in: query
          schema:
            type: string
          example: BTCUSDT
        - name: amount
          in: query
          schema:
            type: integer
          example: '100'
        - name: type
          in: query
          schema:
            type: integer
          example: '1'
        - name: timestamp
          in: query
          schema:
            type: integer
          example: '1234567890'
        - name: signature
          in: query
          schema:
            type: string
          example: signature
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /fapi/v1/positionMargin/history:
    get:
      tags:
        - Trade
      summary: Get Postion Margin Change History
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: X-MBX-APIKEY
          in: header
          schema:
            type: string
          example: binance-api-key
        - name: symbol
          in: query
          schema:
            type: string
          example: BTCUSDT
        - name: timestamp
          in: query
          schema:
            type: integer
          example: '1234567890'
        - name: signature
          in: query
          schema:
            type: string
          example: signature
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /fapi/v1/positionSide/dual:
    post:
      tags:
        - Trade
      summary: Change Position Mode（TRADE）
      requestBody:
        content: {}
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: X-MBX-APIKEY
          in: header
          schema:
            type: string
          example: binance-api-key
        - name: dualSidePosition
          in: query
          schema:
            type: string
          description: 'Boolean value. "true": Hedge Mode mode; "false": One-way Mode'
        - name: timestamp
          in: query
          schema:
            type: integer
          example: '1234567890'
        - name: signature
          in: query
          schema:
            type: string
          example: signature
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - Trade
      summary: Get Current Position Mode（USER_DATA）
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: X-MBX-APIKEY
          in: header
          schema:
            type: string
          example: binance-api-key
        - name: timestamp
          in: query
          schema:
            type: integer
          example: '1234567890'
        - name: signature
          in: query
          schema:
            type: string
          example: signature
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /fapi/v1/apiTradingStatus:
    get:
      tags:
        - Trade
      summary: User API Trading Quantitative Rules Indicators (USER_DATA)
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: X-MBX-APIKEY
          in: header
          schema:
            type: string
          example: binance-api-key
        - name: timestamp
          in: query
          schema:
            type: integer
          example: '1234567890'
        - name: signature
          in: query
          schema:
            type: string
          example: signature
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /fapi/v1/listenKey:
    post:
      tags:
        - Data Stream
      summary: Create New Listen Key
      requestBody:
        content: {}
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: X-MBX-APIKEY
          in: header
          schema:
            type: string
          example: binance-api-key
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    put:
      tags:
        - Data Stream
      summary: Renew Listen Key
      requestBody:
        content: {}
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: X-MBX-APIKEY
          in: header
          schema:
            type: string
          example: binance-api-key
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    delete:
      tags:
        - Data Stream
      summary: Delete Listen Key
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: X-MBX-APIKEY
          in: header
          schema:
            type: string
          example: binance-api-key
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /fapi/v1/pmAccountInfo:
    get:
      tags:
        - Portfolio Margin
      summary: Portfolio Margin Account Information
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: X-MBX-APIKEY
          in: header
          schema:
            type: string
          example: binance-api-key
        - name: asset
          in: query
          schema:
            type: string
        - name: timestamp
          in: query
          schema:
            type: integer
          example: '1234567890'
        - name: signature
          in: query
          schema:
            type: string
          example: signature
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
